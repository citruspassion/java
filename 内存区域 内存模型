内存区域是指 Jvm 运行时将数据分区域存储，强调对内存空间的划分。
内存模型（Java Memory Model，简称 JMM ）是定义了线程和主内存之间的抽象关系

jdk8以前的内存区域

方法区 虚拟机栈 堆 程序计数器  本地方法栈
jkd8以后的内存区域   虚拟机栈 堆 程序计数器  metaspace   codecache jit编译产物


程序计数器
 Java 虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器内核都只会执行一条线程中的指令
 为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个独立的程序计数器，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存
 线程正在执行的是一个 Java 方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址
 执行的是 Native 方法，这个计数器值则为空（Undefined）
 
 
Java虚拟机栈
与程序计数器一样，Java 虚拟机栈（Java Virtual Machine Stacks）也是线程私有的，它的生命周期与线程相同。
虚拟机栈描述的是 Java 方法执行的内存模型       

每个方法在执行的同时都会创建一个栈帧 用于存储局部变量表、操作数栈、动态链接、方法出口等信息。
每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。
