线程池的优势
：1.方便管理，统一进行管理不会出现野线程并提供了一些管理的办法比如shutdown
2.避免了重复开启与关闭线程，造成了资源的浪费，有一定的约束
3。随拿随用，不用担心线程的创建与销毁，提高了响应的速度，因为创建，销毁比较消耗性能
4。可以允许延期执行或者定期执行，比如scheduledthreadpoolexecutor
线程池的主要参数
1.corePoolSize 核心线程数
当我们向线程池提出了一个任务时候，当线程池所创建的线程数小于核心线程数，即出现了空闲线程，就会创建新线程来执行该任务，直到大于等与核心线程数
同属 prestartCoreThread() 或 prestartAllCoreThreads() 方法来提前启动线程池中的基本线程
2、maximumPoolSize 线程池最大大小
即线程池最大允许的线程数目，当队列满了，且当前线程数小于最大线程池数的时候，就会创建新的线程
对于无界队列，可忽略该参数。
3.keepAliveTime 线程存活保持时间
当当前线程数大于核心线程数的时候，如果此时线程的空闲时间大于等于存活时间，那么线程就会被销毁，直到小于等于核心线程数
4、workQueue 任务队列
用来传输或者保存的等待执行任务的阻塞队列
5、threadFactory 线程工厂
采用new Thread()来创建新线程的地方
pool-m-thread-n（m为线程池的编号，n为线程池内的线程编号）。
他这个就比如我们的哈希表，存到第几个位，第几位的链表的第几号
6 handler 线程饱和策略
当等待队列和线程池都满的时候执行的策略

==================================================================================
整个线程池的流程
1.提交任务
判断线程池所创建的线程数是否小于核心线程数  否 创建新线程    是  询问当前队列是否已经满 否 添加队列  是 询问线程池是否满  否 创建新线程  是 按饱和策略执行
